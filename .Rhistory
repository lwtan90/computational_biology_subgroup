require(edgeR)
require(ggplot2)
require(gplots)
require(VennDiagram)
require(RColorBrewer)
require(goseq)
require(scales)
require(reshape)
require(stringr)
setwd("D:/analysis/Stanford/Hongchao/ALDH2/iPSCCM")
gene2biotype = read.table("../gene2symbol.txt")
names(gene2biotype)=c("gid","hgnc")
countdata = read.table("count.txt",row.names=1,header=TRUE)
countdata = countdata[ rownames(countdata)%in%gene2biotype$hgnc, ]
dim(countdata)
grouping = read.table("grouping.txt")
names(grouping)=c("sample","group")
grouping$group = factor(grouping$group,levels=c("WT","KO"))
countdata = countdata[,colnames(countdata)%in%grouping$sample]
data <- DGEList(counts=countdata,group=grouping$group)
filter = apply(data$counts,1,function(x) length(x[x>5])>=2)
filtered = data$counts[ filter, ]
filtered = filtered[grep("^_",rownames(filtered),invert=TRUE),]
design = model.matrix(~0+group,data=grouping)
colnames(design)=gsub("group","",colnames(design))
design
rnaseq = DGEList(counts=filtered,group=grouping$group)
rnaseq = calcNormFactors(rnaseq)
rnaseq = estimateDisp(rnaseq,design)
fit <- glmQLFit(rnaseq, design)
normdata = as.data.frame(cpm(rnaseq))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
options("install.lock"=FALSE)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
require(edgeR)
require(ggplot2)
require(gplots)
require(VennDiagram)
require(RColorBrewer)
require(goseq)
require(scales)
require(reshape)
require(stringr)
setwd("D:/analysis/Stanford/Hongchao/ALDH2/iPSCCM")
gene2biotype = read.table("../gene2symbol.txt")
names(gene2biotype)=c("gid","hgnc")
countdata = read.table("count.txt",row.names=1,header=TRUE)
countdata = countdata[ rownames(countdata)%in%gene2biotype$hgnc, ]
dim(countdata)
grouping = read.table("grouping.txt")
names(grouping)=c("sample","group")
grouping$group = factor(grouping$group,levels=c("WT","KO"))
countdata = countdata[,colnames(countdata)%in%grouping$sample]
data <- DGEList(counts=countdata,group=grouping$group)
filter = apply(data$counts,1,function(x) length(x[x>5])>=2)
filtered = data$counts[ filter, ]
filtered = filtered[grep("^_",rownames(filtered),invert=TRUE),]
design = model.matrix(~0+group,data=grouping)
colnames(design)=gsub("group","",colnames(design))
design
rnaseq = DGEList(counts=filtered,group=grouping$group)
rnaseq = calcNormFactors(rnaseq)
rnaseq = estimateDisp(rnaseq,design)
fit <- glmQLFit(rnaseq, design)
normdata = as.data.frame(cpm(rnaseq))
require(edgeR)
require(ggplot2)
require(gplots)
require(VennDiagram)
require(RColorBrewer)
require(goseq)
require(scales)
require(reshape)
require(stringr)
setwd("D:/analysis/Stanford/Hongchao/ALDH2/iPSCCM")
gene2biotype = read.table("../gene2symbol.txt")
names(gene2biotype)=c("gid","hgnc")
countdata = read.table("count.txt",row.names=1,header=TRUE)
countdata = countdata[ rownames(countdata)%in%gene2biotype$hgnc, ]
dim(countdata)
grouping = read.table("grouping.txt")
names(grouping)=c("sample","group")
grouping$group = factor(grouping$group,levels=c("WT","KO"))
countdata = countdata[,colnames(countdata)%in%grouping$sample]
data <- DGEList(counts=countdata,group=grouping$group)
filter = apply(data$counts,1,function(x) length(x[x>5])>=2)
filtered = data$counts[ filter, ]
filtered = filtered[grep("^_",rownames(filtered),invert=TRUE),]
design = model.matrix(~0+group,data=grouping)
colnames(design)=gsub("group","",colnames(design))
design
rnaseq = DGEList(counts=filtered,group=grouping$group)
rnaseq = calcNormFactors(rnaseq)
rnaseq = estimateDisp(rnaseq,design)
fit <- glmQLFit(rnaseq, design)
normdata = as.data.frame(cpm(rnaseq))
setwd("D:/analysis/Stanford/Hongchao/ALDH2/mouse/")
require(goseq)
require(data.table)
require(reshape)
require(ggplot2)
require(scales)
require(stringr)
require("KEGG.db")
require(org.Hs.eg.db)
require(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
setwd("C:/Users/wlwtan/Dropbox/Stanford/GitHub/ATACseq/computational_biology_subgroup")
data = read.table("data/Meeting_20210618/GSE165837_CARE_ATAC_merged_umap_cluster_labels.tsv",header=TRUE,sep="\t")
summary(data)
head(data)
require(stringr)
set1 = as.data.frame(matrix(unlist(str_split(data$Sample.Barcode,"-")),byrow=TRUE,ncol=2))
head(set1)
set2 = as.data.frame(matrix(unlist(str_split(set1$V2,"+")),byrow=TRUE,ncol=2))
set2 = as.data.frame(matrix(unlist(str_split(set1$V2,"\+")),byrow=TRUE,ncol=2))
set2 = as.data.frame(matrix(unlist(str_split(set1$V2,"\\+")),byrow=TRUE,ncol=2))
head(set2)
data$tissue = set2$V1
head(data)
write.table(data,file="data/Meeting_20210618/tissueadded_GSE165837_CARE_ATAC_merged_umap_cluster_labels.tsv",sep="\t",quote=FALSE,row.names=F)
install.packages("dplyr")
require(dplyr)
celltype.for.LV = data %>%
filter(tissue == "LV") %>%
group_by(tissue, Cluster) %>% count()
celltype.for.LV
celltype.for.LV = data %>%
filter(tissue == "LV") %>%
group_by(tissue, Cluster) %>% count() %>%
ungroup()
celltype.for.LV
### Question 3: To count the cell types in both LV and RV only
celltype.for.RV.and.LV = data %>%
group_by(tissue, Cluster) %>% count()
celltype.for.RV.and.LV
celltype.for.LV = celltype.for.LV %>%
filter(tissue != "LV") %>%
group_by(Cluster) %>%
count() %>%
ungroup()%>%
arrange(desc(Cluster)) %>%
mutate(percentage = round(n/sum(n),4)*100,
lab.pos = cumsum(percentage)-.5*percentage)
celltype.for.LV
celltype.for.LV = data %>%
filter(tissue == "LV") %>%
group_by(Cluster) %>% count()
celltype.for.LV
celltype.for.LV = celltype.for.LV %>%
filter(tissue == "LV") %>%
group_by(Cluster) %>%
count() %>%
ungroup()%>%
arrange(desc(Cluster)) %>%
mutate(percentage = round(n/sum(n),4)*100,
lab.pos = cumsum(percentage)-.5*percentage)
celltype.for.LV = data %>%
filter(tissue == "LV") %>%
group_by(Cluster) %>%
count() %>%
ungroup()%>%
arrange(desc(Cluster)) %>%
mutate(percentage = round(n/sum(n),4)*100,
lab.pos = cumsum(percentage)-.5*percentage)
celltype.for.LV
require(ggplot2)
ggplot(data = celltype.for.LV,
aes(x = "", y = percentage, fill = Cluster))+
geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
geom_text(aes(y = lab.pos, label = paste(percentage,"%", sep = "")), col = "white") +
theme_void() +
scale_fill_brewer(palette = "Dark2")
ggplot(data = celltype.for.LV,
aes(x = "", y = percentage, fill = Cluster))+
geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
geom_text(aes(y = lab.pos, label = paste(percentage,"%", sep = "")), col = "white") +
theme_void() +
scale_fill_brewer(palette = "Paired")
celltype.for.LV = data %>%
filter(tissue == "LV") %>%
group_by(Cluster) %>%
count() %>%
ungroup()%>%
arrange(desc(n)) %>%
mutate(percentage = round(n/sum(n),4)*100,
lab.pos = cumsum(percentage)-.5*percentage)
celltype.for.LV
ggplot(data = celltype.for.LV,
aes(x = "", y = percentage, fill = Cluster))+
geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
geom_text(aes(y = lab.pos, label = paste(percentage,"%", sep = "")), col = "white") +
theme_void() +
scale_fill_brewer(palette = "Paired")
celltype.for.LV = data %>%
filter(tissue == "LV") %>%
group_by(Cluster) %>%
count() %>%
ungroup()%>%
arrange(n) %>%
mutate(percentage = round(n/sum(n),4)*100,
lab.pos = cumsum(percentage)-.5*percentage)
celltype.for.LV
ggplot(data = celltype.for.LV,
aes(x = "", y = percentage, fill = Cluster))+
geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
geom_text(aes(y = lab.pos, label = paste(percentage,"%", sep = "")), col = "white") +
theme_void() +
scale_fill_brewer(palette = "Paired")
celltype.for.LV = data %>%
filter(tissue == "LV") %>%
group_by(Cluster) %>%
count() %>%
ungroup()%>%
arrange(desc(n)) %>%
mutate(percentage = round(n/sum(n),4)*100,
lab.pos = cumsum(percentage)-.5*percentage)
ggplot(data = celltype.for.LV,
aes(x = "", y = percentage, fill = Cluster))+
geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
geom_text(aes(y = lab.pos, label = paste(percentage,"%", sep = "")), col = "white") +
theme_void() +
scale_fill_brewer(palette = "Paired")
celltype.for.LV
celltype.for.LV = data %>%
filter(tissue == "LV") %>%
group_by(Cluster) %>%
count() %>%
ungroup()%>%
arrange(desc(Cluster)) %>%
mutate(percentage = round(n/sum(n),4)*100,
lab.pos = cumsum(percentage)-.5*percentage)
### Now we are ready to plot
ggplot(data = celltype.for.LV,
aes(x = "", y = percentage, fill = Cluster))+
geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
geom_text(aes(y = lab.pos, label = paste(percentage,"%", sep = "")), col = "white") +
theme_void() +
scale_fill_brewer(palette = "Paired")
ggplot(data = celltype.for.LV,
aes(x = "", y = percentage, fill = Cluster))+
geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
theme_void() +
scale_fill_brewer(palette = "Paired")
celltype.for.LV = data %>%
filter(tissue == "LV") %>%
group_by(Cluster) %>%
count() %>%
ungroup()%>%
arrange(desc(n)) %>%
mutate(percentage = round(n/sum(n),4)*100,
lab.pos = cumsum(percentage)-.5*percentage)
ggplot(data = celltype.for.LV, aes(x = "", y = percentage, fill = Cluster))+geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
theme_void() +
scale_fill_brewer(palette = "Paired")
celltype.for.LV
ggplot(data = celltype.for.LV, aes(x = 2, y = percentage, fill = os))+
geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
theme_void() +
scale_fill_brewer(palette = "Paired")+
xlim(.2,2.5)
ggplot(data = celltype.for.LV, aes(x = 2, y = percentage, fill = Cluster))+
geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
theme_void() +
scale_fill_brewer(palette = "Paired")+
xlim(.2,2.5)
p1 <- ggplot(data = celltype.for.LV, aes(x = 2, y = percentage, fill = Cluster))
p1 <- p1 + geom_bar(stat = "identity")
p1 <- p1 + coord_polar("y", start = 200)
p1 <- p1 + theme_void()
p1 <- p1 + scale_fill_brewer(palette = "Paired") + xlim(.2,2.5)
p1 <- p1 + ggtitle("Cell Type Composition in LV")
print(p1)
p1 <- ggplot(data = celltype.for.LV, aes(x = 2, y = percentage, fill = Cluster))
p1 <- p1 + geom_bar(stat = "identity")
p1 <- p1 + coord_polar("y", start = 200)
p1 <- p1 + theme_void()
p1 <- p1 + scale_fill_brewer(palette = "Paired") + xlim(.2,2.5)
p1 <- p1 + annotate(geom = 'text', x = 0.5, y = 0, label = "Cell Type Composition in LV")
print(p1)
p1 <- ggplot(data = celltype.for.LV, aes(x = 2, y = percentage, fill = Cluster))
p1 <- p1 + geom_bar(stat = "identity")
p1 <- p1 + coord_polar("y", start = 200)
p1 <- p1 + theme_void()
p1 <- p1 + scale_fill_brewer(palette = "Paired") + xlim(.2,2.5)
p1 <- p1 + annotate(geom = 'text', x = 0.75, y = 0, label = "Cell Type Composition in LV")
print(p1)
p1 <- ggplot(data = celltype.for.LV, aes(x = 2, y = percentage, fill = Cluster))
p1 <- p1 + geom_bar(stat = "identity")
p1 <- p1 + coord_polar("y", start = 200)
p1 <- p1 + theme_void()
p1 <- p1 + scale_fill_brewer(palette = "Paired") + xlim(.2,2.5)
p1 <- p1 + annotate(geom = 'text', x = 0, y = 0, label = "Cell Type Composition in LV")
print(p1)
p1 <- ggplot(data = celltype.for.LV, aes(x = 2, y = percentage, fill = Cluster))
p1 <- p1 + geom_bar(stat = "identity")
p1 <- p1 + coord_polar("y", start = 200)
p1 <- p1 + theme_void()
p1 <- p1 + scale_fill_brewer(palette = "Paired") + xlim(.2,2.5)
p1 <- p1 + annotate(geom = 'text', x = 0.1, y = 0, label = "Cell Type Composition in LV")
print(p1)
p1 <- ggplot(data = celltype.for.LV, aes(x = 2, y = percentage, fill = Cluster))
p1 <- p1 + geom_bar(stat = "identity")
p1 <- p1 + coord_polar("y", start = 200)
p1 <- p1 + theme_void()
p1 <- p1 + scale_fill_brewer(palette = "Paired") + xlim(.2,2.5)
p1 <- p1 + annotate(geom = 'text', x = 0.4, y = 0, label = "Cell Type Composition in LV")
print(p1)
p1 <- ggplot(data = celltype.for.LV, aes(x = 2, y = percentage, fill = Cluster))
p1 <- p1 + geom_bar(stat = "identity")
p1 <- p1 + coord_polar("y", start = 200)
p1 <- p1 + theme_void()
p1 <- p1 + scale_fill_brewer(palette = "Paired") + xlim(.2,2.5)
p1 <- p1 + annotate(geom = 'text', x = 0.6, y = 0, label = "Cell Type Composition in LV")
print(p1)
p1 <- ggplot(data = celltype.for.LV, aes(x = 2, y = percentage, fill = Cluster))
p1 <- p1 + geom_bar(stat = "identity")
p1 <- p1 + coord_polar("y", start = 200)
p1 <- p1 + theme_void()
p1 <- p1 + scale_fill_brewer(palette = "Paired") + xlim(.2,2.5)
p1 <- p1 + annotate(geom = 'text', x = 1, y = 0, label = "Cell Type Composition in LV")
print(p1)
p1 <- ggplot(data = celltype.for.LV, aes(x = 2, y = percentage, fill = Cluster))
p1 <- p1 + geom_bar(stat = "identity")
p1 <- p1 + coord_polar("y", start = 200)
p1 <- p1 + theme_void()
p1 <- p1 + scale_fill_brewer(palette = "Paired") + xlim(.2,2.5)
p1 <- p1 + annotate(geom = 'text', x = 0.3, y = 0, label = "Cell Type Composition in LV")
print(p1)
